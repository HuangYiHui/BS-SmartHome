package bs.pi.gateway.client.zigbee;

import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.util.HashMap;

import bs.pi.gateway.client.port.PortConverter;
import bs.pi.gateway.main.IConverter;

public class ZigbeeConverter implements IConverter {

	public final static String KEY_CMD = "Cmd";
	public final static String KEY_SENSOR_ID = "SensorID";
	public final static String KEY_SENSOR_VALUE = "SensorValue";
	
	public final static String CMD_UPLOAD_DATA_TO_HTTP_SERVER = "UploadDataToHttpServer";
	
	@Override
	public HashMap<String, Object> convertMsgReceive(HashMap<String, Object> msg) {
		if(msg == null)
			return null;
		
		if( ! PortConverter.KEY_MSG_TYPE.equals(msg.get(PortConverter.MSG_TYPE_PORT_MSG))){
				return null;
		}
		
		if( ! msg.containsKey(PortConverter.KEY_CMD0) || msg.containsKey(PortConverter.KEY_CMD1))
			return null;
		
		byte cmd0 = (byte) msg.get(PortConverter.KEY_CMD0);
		byte cmd1 = (byte) msg.get(PortConverter.KEY_CMD1);
		byte[] data = (byte[]) msg.get(PortConverter.KEY_DATA);
		
		if(cmd0 == 0x44 && cmd1 == 0x81){
			if(data == null || data.length < 21)
				return null;
			byte cmd3 = data[17];
			byte cmd4 = data[18];
			if(cmd3 == 0x00 && cmd4 == 0x01){
				byte len = data[16];
				byte[] data1 = new byte[len-2];
				System.arraycopy(data, 19, data1, 0, len-2);
				return dataUplaodToHttpServer(data1);
			}
		}else{
			return null;
		}
	}
	
	private HashMap<String, Object> dataUplaodToHttpServer(byte[] data){
		byte b1 = data[0];
		byte b2 = data[1];
		int sensorID = b1*256 + b2;
		byte[] valueBytes = new byte[4];
		System.arraycopy(data, 2, valueBytes, 0, 4);
		DataInputStream dis=new DataInputStream(new ByteArrayInputStream(valueBytes));
		float value;
		try {
			value = dis.readFloat();
			dis.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return null;
		}
		
		HashMap<String, Object> msg = new HashMap<String, Object>();
		msg.put(KEY_CMD, CMD_UPLOAD_DATA_TO_HTTP_SERVER);
		msg.put(KEY_SENSOR_ID, sensorID);
		msg.put(KEY_SENSOR_VALUE, value);
		
		return null;
	}

	@Override
	public HashMap<String, Object> convertMsgSend(HashMap<String, Object> msg) {
		// TODO Auto-generated method stub
		return null;
	}
	
}
