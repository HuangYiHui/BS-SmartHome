package bs.pi.gateway.client.port;

import java.util.HashMap;

import bs.pi.gateway.Msg.IMsg;
import bs.pi.gateway.Msg.PortMsgReceivedMsg;
import bs.pi.gateway.Msg.PortSendMsg;
import bs.pi.gateway.main.AppMsg;
import bs.pi.gateway.main.IConverter;

public class PortConverter implements IConverter {

	/*
	 * 格式：
	 * 由项组成：MsgType, Cmd0, Cmd1, Data
	 * MsgType固定为字符串"PortMsg"
	 * Cmd0和Cmd1都为一个字节的Byte,
	 * Data为Byte数组
	 */
	
	@Override
	public IMsg convertMsgReceive(Object msg) {
		if(msg != null){
			PortMsgReceive PortMsgReceived = (PortMsgReceive) msg;
			PortMsgReceivedMsg portMsgReceivedMsg = new PortMsgReceivedMsg();
			portMsgReceivedMsg.setCmd0(PortMsgReceived.getCmd0());
			portMsgReceivedMsg.setCmd1(PortMsgReceived.getCmd1());
			portMsgReceivedMsg.setData(PortMsgReceived.getData());
		}
		
		return null;
	}

	@Override
	public Object convertMsgSend(IMsg msg) {
		if( msg != null && PortSendMsg.MSG_NAME.equals(msg.getName())){
			PortSendMsg portSendMsg = (PortSendMsg) msg;
			PortMsgSend portMsg = new PortMsgSend();
			portMsg.setData(portSendMsg.getData());
			return portMsg;
		}
		
		return null;
	}

}
