package bs.pi.gateway.client.port;
import java.io.IOException;
import java.io.InputStream;
import java.util.Calendar;

import bs.pi.gateway.main.SampleMsgReceiver;

/*
 * port客户端消息接收器/
 */

public class PortReceiver extends SampleMsgReceiver{
	
	private InputStream portStream;
	
	public PortReceiver(final InputStream portStream){
		this.portStream = portStream;
	}
	
	public Byte readByte(InputStream iStream) throws IOException
	{
		int time1 = Calendar.getInstance().get(Calendar.MILLISECOND);
		while(true){
			int time2 = Calendar.getInstance().get(Calendar.MILLISECOND);
			if((time2-time1)>12)
				return null;
			int temp = iStream.read();
			if(temp != -1){
				Byte result = new Byte((byte) temp);
				return result;
			}
		}
	}
	
	public byte[] readBytes(int len, InputStream iStream) throws IOException
	{
		byte[] result = new byte[len];
		for(int i=0;i<len;i++){
			Byte temp = readByte(iStream);
			if(temp == null)
				return null;
			result[i] = temp;
		}
		
		return result;
	}
	
	public void receive()
	{
		//判断信息包是否开始
		byte b;
		boolean isBegin = false;
		while(portStream.available()>0){
			if(portStream.read() == 0xfe){
				isBegin = true;
				break;
			}
		}
		if( ! isBegin)
			return;
		
		Byte len = readByte(portStream);
		if(len == null)
			return;

		Message msg = new Message();
		Byte cmd0 = readByte(portStream);
		if(cmd0 == null)
			return;
		msg.setCmd0(cmd0);
		
		Byte cmd1 = readByte(portStream);
		if(cmd1 == null)
			return;
		msg.setCmd1(cmd1);

		byte[] data = readBytes(len, portStream);
		if(data == null)
			return;
		msg.setData(data);
		
		Byte fcs = readByte(portStream);
		if(fcs == null)
			return;
		
		if(msg.validate(fcs))
			return msg;
		else
			return;
		
	}
}
