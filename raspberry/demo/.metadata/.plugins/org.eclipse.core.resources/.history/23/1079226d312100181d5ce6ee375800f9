package bs.pi.gateway.client.http;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;

import net.sf.json.JSONObject;

import org.apache.http.NameValuePair;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpRequestBase;
import org.apache.http.message.BasicNameValuePair;

import bs.pi.gateway.main.MsgClient;
import bs.pi.gateway.main.MsgReceivedCallback;

public class HttpMsgClient implements MsgClient {

	private HttpMsgClientCfg cfg;
	private HttpMsgReceiver receiver;
	private HttpMsgSender sender = new HttpMsgSender();
	
	public HttpMsgClient(HttpMsgClientCfg cfg){
		this.cfg = cfg;
	}
	
	@Override
	public void connect() throws Exception {
		
	}

	@Override
	public void setReceivedCallBack(MsgReceivedCallback callback) {
		// TODO Auto-generated method stub
		receiver.setReceiveCallBack(callback);
	}

	@Override
	public void startReceive() {
		// TODO Auto-generated method stub
		receiver.start();
	}

	@Override
	public void stopReceive() {
		// TODO Auto-generated method stub
		receiver.stop();
	}

	@Override
	public boolean send(JSONObject msg) {
		if(msg == null)
			return false;
		
		if("SendMsgToHttpService".equals( msg.getString("CmdName") )){
			JSONObject jo = sender.send(msg);
			if(jo == null){
				return false;
			}
			else{
				
			}
		}
		return true;
	}
}
