package bs.pi.gateway.client.http;

import java.util.HashMap;

import bs.pi.gateway.main.AppMsg;
import bs.pi.gateway.main.IConverter;

public class HttpConverter implements IConverter {

	public final static String KEY_HTTP_URL = "Url";
	public final static String KEY_HTTP_METHOD = "Method";
	public final static String KEY_HTTP_APIKEY = "APIKey";
	
	public final static String VALUE_HTTP_METHOD_GET = "Get";
	public final static String VALUE_HTTP_METHOD_POST = "Post";
	public final static String VALUE_HTTP_METHOD_PUT = "Put";
	public final static String VALUE_HTTP_METHOD_DELETE = "Delete";
	
	private HttpClientCfg cfg;
	
	public void setHttpClientCfg(HttpClientCfg cfg){
		this.cfg = cfg;
	}
	
	@Override
	public HashMap<String, Object> convertMsgReceive(HashMap<String, Object> msg) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public HashMap<String, Object> convertMsgSend(HashMap<String, Object> msg) {
		if(msg == null)
			return null;
		
		HashMap<String, Object> result = new HashMap<String, Object>();
		
		if(AppMsg.CMD_UPLOAD_DATA_TO_HTTP_SERVER.equals(msg.get(AppMsg.KEY_CMD))){
			int sensorID = (int) msg.get(AppMsg.KEY_SENSOR_ID);
			float sensorValue = (float) msg.get(AppMsg.KEY_SENSOR_VALUE);
			String url = cfg.getServiceUrl()+"/device/"+cfg.getDeviceID()+"/sensor/"+sensorID+"/datapoint";
			
			result.put(KEY_HTTP_URL, url);
			result.put(KEY_HTTP_METHOD, VALUE_HTTP_METHOD_POST);
			result.put(KEY_HTTP_UR, url);
			return result;
		}else{
			return null;
		}
	}
}
