package bs.pi.gateway.client.mqtt;

import java.io.FileInputStream;
import java.util.Properties;

import org.eclipse.paho.client.mqttv3.MqttConnectOptions;

public class MQTTClientCfg {

	public final static String KEY_HOST = "host";

	private String host;
	private String clientId;
	private int[] qoses;
	private String[] topics;
	private MqttConnectOptions connectOption;
	
	public MQTTClientCfg(String cfgPath){
		Properties properties = new Properties();
		properties.load(new FileInputStream(cfgPath));
		
		host = properties.getProperty(KEY_HOST);
		option.setHost(properties.getProperty("host"));
		option.setClientId(properties.getProperty("clientId"));
		String[] qosesStr = properties.getProperty("qoses").split(",");
		int[] qoses = new int[qosesStr.length];
		for(int i=0; i<qoses.length; i++){
			String str = qosesStr[i];
			int qos = Integer.parseInt(str.trim());
			qoses[i] = qos;
		}
    	option.setQoses(qoses);
    	
    	String[] topicsStr = properties.getProperty("topics").split(",");
    	String[] topics = new String[topicsStr.length];
		for(int i=0; i<topicsStr.length; i++){
			topics[i] = topicsStr[i].trim();
		}
    	option.setTopics(topics);
    	
    	MqttConnectOptions connectOption = new MqttConnectOptions();
    	connectOption.setCleanSession(true);
    	connectOption.setUserName(properties.getProperty("username"));
    	connectOption.setPassword(properties.getProperty("password").toCharArray());
    	int connectTimeout = Integer.parseInt(properties.getProperty("connectTimeout"));
    	connectOption.setConnectionTimeout(connectTimeout);
    	int keepAliveInterval = Integer.parseInt(properties.getProperty("keepAliveInterval"));
    	connectOption.setKeepAliveInterval(keepAliveInterval);
    	//setWill方法，如果项目中需要知道客户端是否掉线可以调用该方法。设置最终端口的通知消息 
    	//connectOption.setWill(topic, "close".getBytes(), 2, true);  
    	option.setConnectOption(connectOption);
	}

	public String getHost() {
		return host;
	}
	public void setHost(String host) {
		this.host = host;
	}
	public String getClientId() {
		return clientId;
	}
	public void setClientId(String clientId) {
		this.clientId = clientId;
	}
	public int[] getQoses() {
		return qoses;
	}
	public void setQoses(int[] qoses) {
		this.qoses = qoses;
	}
	public String[] getTopics() {
		return topics;
	}
	public void setTopics(String[] topics) {
		this.topics = topics;
	}
	public MqttConnectOptions getConnectOption() {
		return connectOption;
	}
	public void setConnectOption(MqttConnectOptions connectOption) {
		this.connectOption = connectOption;
	}
}
