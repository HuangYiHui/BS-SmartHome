import java.util.HashMap;

import bs.pi.gateway.client.http.HttpClient;
import bs.pi.gateway.client.zigbee.ZigbeeClient;
import bs.pi.gateway.main.Gateway;
import bs.pi.gateway.processor.MyProcessor;


public class Test {

	public static void main(String[] args) throws InterruptedException {
		//test2();
		test3();
	}
	
	public static void test3() throws Exception{
		HttpClient httpClient = new HttpClient(HttpClient.DEFAULT_CFG_PATH);
		httpClient.init();
		httpClient.start();
	}
	
	public static void test2(){
		
		float f = (float) -123.45;
		
		// 把float转换为byte[]  
	    int fbit = Float.floatToIntBits(f);  
	      
	    byte[] b = new byte[4];    
	    for (int i = 0; i < 4; i++) {    
	        b[i] = (byte) (fbit >> (24 - i * 8));    
	    }   
	      
	    // 翻转数组  
	    int len = b.length;  
	    // 建立一个与源数组元素类型相同的数组  
	    byte[] dest = new byte[len];  
	    // 为了防止修改源数组，将源数组拷贝一份副本  
	    System.arraycopy(b, 0, dest, 0, len);  
	    byte temp;  
	    // 将顺位第i个与倒数第i个交换  
	    for (int i = 0; i < len / 2; ++i) {  
	        temp = dest[i];  
	        dest[i] = dest[len - i - 1];  
	        dest[len - i - 1] = temp;  
	    }
	    
	    for(byte bb: dest)
	    	System.out.printf("%x,", bb);
	}
	
	public static void test1() throws InterruptedException{
		Gateway gateway = new Gateway();
		
		MyProcessor processor = new MyProcessor();
		
		TestReceiver testReceiver = new TestReceiver();
		testReceiver.start();
		gateway.installReceiver(testReceiver);
		gateway.setProcessor(processor);
		
		gateway.start();
		
		Thread.sleep(6000);
		testReceiver.stop();
	}

}
