package bs.pi.gateway.client.zigbee;

import java.util.HashMap;

import com.sun.org.apache.bcel.internal.classfile.Code;

import bs.pi.gateway.Msg.IMsg;
import bs.pi.gateway.Msg.PortSendMsg;
import bs.pi.gateway.Msg.ZigbeeSendReponseMsg;
import bs.pi.gateway.main.AppMsg;
import bs.pi.gateway.main.IConverter;
import bs.pi.gateway.main.ISender;

public class ZigbeeSender implements ISender {

	private ZigbeeClientCfg cfg;
	private ISender portSender;
	private IConverter converter;
	
	public ZigbeeSender(ISender portSender, IConverter converter, ZigbeeClientCfg cfg){
		this.portSender = portSender;
		this.converter = converter;
		this.cfg = cfg;
	}
	
	@Override
	public String getName() {
		return ISender.V_SEND_NAME_ZIGBEE_SNEDER;
	}

	@Override
	public IMsg send(IMsg msg) {
		Object obj = converter.convertMsgSend(msg);
		ZigbeeSendReponseMsg response = new ZigbeeSendReponseMsg();
		if(obj != null){
			ZigbeeMsg zigbeeMsg = (ZigbeeMsg)obj;
			ZigbeeFrameOut frame = new ZigbeeFrameOut();
			frame.setDstAddr(zigbeeMsg.getDstAddr());
			frame.setDstEndpoint(cfg.getDstEndpoint());
			frame.setClusterID(cfg.getClusterID());
			frame.setData(zigbeeMsg.getData());
			frame.setOptions(cfg.getOptions());
			frame.setRadius(cfg.getRadius());
			frame.setSrcEndpoint(cfg.getSrcEndpoint());
			frame.setTransID((byte) 0x00);
			HashMap<String, Object> msg2 = new HashMap<String, Object>();
			msg2.put(AppMsg.K_CMD_NAME, AppMsg.V_CMD_NAME_PORT_SEND);
			PortSendMsg portSendMsg = new PortSendMsg();
			portSendMsg.setData(CodeGenerator.packetSend(frame));
			portSender.send(portSendMsg);
			//·¢ËÍ³É¹¦
			if(ISender.V_SEND_STATUS_SUCCESS.equals(msg4.get(ISender.K_SEND_STATUS))){
				HashMap<String, Object> result = new HashMap<String, Object>();
				result.put(ISender.K_SEND_STATUS, ISender.V_SEND_STATUS_SUCCESS);
				return result;
			}
		}else{
			response.setSendSuccess(false);
		}
		HashMap<String, Object> result = new HashMap<String, Object>();
		result.put(ISender.K_SEND_STATUS, ISender.V_SEND_STATUS_FAIL);
		return result;
	}

}
